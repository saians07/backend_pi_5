name: Continuous Integration

on:
  push:
    branches: [release_candidate, master]
  pull_request:
    branches: [master]
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ github.repository }}
  APP_NAME: backend_pi_5

jobs:
  test:
    name: Test and Lint the Code
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13", "3.11"]
      
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version}}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
      - name: Lint the Code Using flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # - name: Test the code with pytest
      #   run: |
      #     pytest
      #     if [ $? -eq 5 ]; then
      #       exit 0 
      #     fi
  build-and-publish:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'

    permissions:
      contents: read
      packages: write

    outputs:
      image: ${{ steps.build.outputs.image }}
      digest: ${{ steps.build.outputs.digest }}
      version: ${{ steps.build.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up docker buildx
        if: github.ref == 'refs/heads/master'
        uses: docker/setup-buildx-action@v3

      - name: Generate version
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(echo $GITHUB_SHA | cut -c1-8)
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"


      - name: Login to Container
        uses: docker/login-action@v3
        if: github.ref == 'refs/heads/master'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Extract Metadata
        id: meta
        if: github.ref == 'refs/heads/master'
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}
            type=raw,value=${{ steps.version.outputs.version }}
      
      - name: Build and Push Docker Image
        id: build
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./scripts/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.version.outputs.version }}
            BUILD_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          cache-from: type=gha
          cache-to: type=gha,mode=max
